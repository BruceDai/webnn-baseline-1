'use strict';

import {broadcast} from '../src/broadcast.js';
import {Tensor} from '../src/tensor.js';
import * as utils from './utils.js';

describe('test broadcast', function() {
  it('broadcast', function() {
    const inputShape = [5];
    const inputData = [0.6338172, 1.630534, -1.3819867, -1.0427561, 1.058136];
    const inputTensor = new Tensor(inputShape, inputData);
    const expectedShape = [3, 4, 5];
    const expectedData = [
      0.633817195892334, 1.630534052848816, -1.3819867372512817, -1.0427560806274414,
      1.058135986328125, 0.633817195892334, 1.630534052848816, -1.3819867372512817,
      -1.0427560806274414, 1.058135986328125, 0.633817195892334, 1.630534052848816,
      -1.3819867372512817, -1.0427560806274414, 1.058135986328125, 0.633817195892334,
      1.630534052848816, -1.3819867372512817, -1.0427560806274414, 1.058135986328125,
      0.633817195892334, 1.630534052848816, -1.3819867372512817, -1.0427560806274414,
      1.058135986328125, 0.633817195892334, 1.630534052848816, -1.3819867372512817,
      -1.0427560806274414, 1.058135986328125, 0.633817195892334, 1.630534052848816,
      -1.3819867372512817, -1.0427560806274414, 1.058135986328125, 0.633817195892334,
      1.630534052848816, -1.3819867372512817, -1.0427560806274414, 1.058135986328125,
      0.633817195892334, 1.630534052848816, -1.3819867372512817, -1.0427560806274414,
      1.058135986328125, 0.633817195892334, 1.630534052848816, -1.3819867372512817,
      -1.0427560806274414, 1.058135986328125, 0.633817195892334, 1.630534052848816,
      -1.3819867372512817, -1.0427560806274414, 1.058135986328125, 0.633817195892334,
      1.630534052848816, -1.3819867372512817, -1.0427560806274414, 1.058135986328125,
    ];
    const outputTensor = broadcast(inputTensor, [3, 4, 5]);
    utils.checkShape(outputTensor, expectedShape);
    utils.checkValue(outputTensor, expectedData);
  });
});
