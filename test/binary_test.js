'use strict';

import {add, sub, mul, div, max, min, pow} from '../src/binary.js';
import {Tensor} from '../src/tensor.js';
import * as utils from './utils.js';

describe('test binary', function() {
  function testBinary(inputA, inputB, expected, func) {
    const tensorA = new Tensor(inputA.shape, inputA.data);
    const tensorB = new Tensor(inputB.shape, inputB.data);
    const outputTensor = func(tensorA, tensorB);
    utils.checkShape(outputTensor, expected.shape);
    utils.checkValue(outputTensor, expected.data);
  }

  it('add', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.08939514,  -1.5887482,  0.8545348,   0.20523034,  -0.41728342,
        1.01752,     0.19677015,  0.5398451,   0.56893295,  1.2511084,
        2.0092728,   1.0606714,   0.4893267,   0.09536829,  -2.3467007,
        2.4527607,   0.61307395,  -1.0799897,  -0.15071101, -0.48422927,
        -0.20479254, 0.32798728,  -0.37435308, -1.7116562,  1.6952512,
        -0.7479369,  -0.09019202, 0.14343949,  1.6754607,   1.6427531,
        0.9470988,   0.20872667,  -1.9530525,  -0.21783416, 0.0309498,
        0.3008434,   1.1686599,   1.4920886,   0.06633294,  0.6674667,
        0.60627925,  0.04302086,  -0.03482966, -0.7343786,  -0.76851964,
        0.9446942,   -0.35489243, 0.44452578,  0.00648887,  -0.55656946,
        -0.735903,   0.22050636,  -0.5008282,  -1.3132697,  1.6642882,
        -0.48397836, 0.20099205,  -0.28786168, 1.3315053,   -0.41619393,
      ],
    };
    const inputB = {
      shape: [3, 4, 5],
      data: [
        -0.5781865,  -0.49248728, -0.2162451,  -0.13176449, -0.52118045,
        1.9125274,   0.6508799,   0.71873736,  -2.3154447,  0.8080079,
        0.3022368,   0.21394566,  -0.6511544,  0.20001237,  -0.08041809,
        1.1127822,   -1.521739,   0.7249548,   -0.91961324, -0.83175105,
        -1.4569077,  -0.5417681,  -1.6476909,  0.1223801,   2.220618,
        -0.14914903, 0.7790501,   -0.18711103, -0.9941537,  -1.828552,
        -1.36035,    0.5727087,   2.5213664,   -0.3267195,  0.8431539,
        0.12337407,  1.0018097,   -0.23469485, -0.4530751,  0.09238022,
        0.7888511,   0.11107288,  0.48171726,  0.34308678,  -0.90550417,
        0.203841,    0.02521433,  -1.7966009,  -1.4287543,  0.3222213,
        1.0590587,   -1.7948701,  -1.7195907,  -0.9120889,  -0.9391962,
        -0.2566791,  -0.5464537,  1.4351872,   0.5705938,   -0.30327085,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        -0.48879138, -2.0812354,  0.6382897,   0.07346585,  -0.93846387,
        2.9300475,   0.84765005,  1.2585825,   -1.7465117,  2.0591164,
        2.3115096,   1.2746171,   -0.16182771, 0.29538065,  -2.4271188,
        3.565543,    -0.90866506, -0.3550349,  -1.0703243,  -1.3159803,
        -1.6617002,  -0.21378079, -2.022044,   -1.5892761,  3.9158692,
        -0.8970859,  0.6888581,   -0.04367155, 0.681307,    -0.18579888,
        -0.41325122, 0.7814354,   0.56831384,  -0.54455364, 0.8741037,
        0.42421746,  2.1704698,   1.2573937,   -0.38674217, 0.7598469,
        1.3951304,   0.15409374,  0.4468876,   -0.3912918,  -1.6740239,
        1.1485353,   -0.32967812, -1.3520751,  -1.4222654,  -0.23434815,
        0.32315564,  -1.5743638,  -2.220419,   -2.2253585,  0.72509193,
        -0.74065745, -0.34546167, 1.1473255,   1.9020991,   -0.7194648,
      ],
    };
    testBinary(inputA, inputB, expected, add);
  });

  it('add broadcast', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        -0.08539673, 0.11800674,  -1.2358714,  0.30089188,  -0.73443925,
        1.4894297,   0.16823359,  -2.2034893,  1.0740992,   -0.35457978,
        0.61524934,  0.462153,    0.5992003,   -0.81047946, -2.2757835,
        -0.21841764, 1.1650828,   -0.56927145, 1.9960726,   0.62048405,
        0.10586528,  -1.0386543,  -1.9402571,  -2.0906122,  -0.4305259,
        -1.2730165,  1.5639576,   0.53357494,  -0.8079486,  -0.06450062,
        -0.7841324,  -0.24135855, 1.9275267,   0.4476717,   0.15467685,
        -1.2363592,  -0.50745815, 0.03250425,  0.86344534,  -0.7938714,
        1.1835734,   1.515135,    0.3092435,   -1.311751,   -0.6659017,
        0.8815683,   -0.31157655, 0.57511795,  -1.1924151,  -1.8408557,
        -0.85080767, -1.3341717,  0.54687303,  -0.14426671, -0.15728855,
        0.323939,    1.167636,    0.03020451,  0.91373825,  1.0675793,
      ],
    };
    const inputB = {
      shape: [5],
      data: [
        0.6338172,
        1.630534,
        -1.3819867,
        -1.0427561,
        1.058136,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        0.5484205,   1.7485408, -2.6178582, -0.7418642,  0.32369673,
        2.123247,    1.7987677, -3.585476,  0.0313431,   0.7035562,
        1.2490666,   2.0926871, -0.7827864, -1.8532355,  -1.2176476,
        0.41539955,  2.7956169, -1.9512582, 0.95331657,  1.6786201,
        0.7396825,   0.5918797, -3.3222437, -3.1333683,  0.6276101,
        -0.63919926, 3.1944916, -0.8484118, -1.8507047,  0.99363536,
        -0.15031523, 1.3891755, 0.54554,    -0.59508437, 1.2128129,
        -0.60254204, 1.123076,  -1.3494825, -0.17931074, 0.26426458,
        1.8173906,   3.145669,  -1.0727432, -2.354507,   0.39223427,
        1.5153855,   1.3189576, -0.8068688, -2.2351713,  -0.78271973,
        -0.21699047, 0.2963624, -0.8351137, -1.1870228,  0.90084743,
        0.95775616,  2.79817,   -1.3517822, -0.12901783, 2.1257153,
      ],
    };
    testBinary(inputA, inputB, expected, add);
  });

  it('sub', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        1.7640524,   0.4001572,  0.978738,    2.2408931,   1.867558,
        -0.9772779,  0.95008844, -0.1513572,  -0.10321885, 0.41059852,
        0.14404356,  1.4542735,  0.7610377,   0.12167501,  0.44386324,
        0.33367434,  1.4940791,  -0.20515826, 0.3130677,   -0.85409576,
        -2.5529897,  0.6536186,  0.8644362,   -0.742165,   2.2697546,
        -1.4543657,  0.04575852, -0.18718386, 1.5327792,   1.4693588,
        0.15494743,  0.37816253, -0.88778573, -1.9807965,  -0.34791216,
        0.15634897,  1.2302907,  1.2023798,   -0.3873268,  -0.30230275,
        -1.048553,   -1.420018,  -1.7062702,  1.9507754,   -0.5096522,
        -0.4380743,  -1.2527953, 0.7774904,   -1.6138978,  -0.21274029,
        -0.89546657, 0.3869025,  -0.51080513, -1.1806322,  -0.02818223,
        0.42833188,  0.06651722, 0.3024719,   -0.6343221,  -0.36274117,
      ],
    };
    const inputB = {
      shape: [3, 4, 5],
      data: [
        -0.67246044, -0.35955316, -0.8131463,  -1.7262826,  0.17742614,
        -0.40178093, -1.6301984,  0.46278226,  -0.9072984,  0.0519454,
        0.7290906,   0.12898292,  1.1394007,   -1.2348258,  0.40234163,
        -0.6848101,  -0.87079716, -0.5788497,  -0.31155252, 0.05616534,
        -1.1651498,  0.9008265,   0.46566245,  -1.5362437,  1.4882522,
        1.8958892,   1.1787796,   -0.17992483, -1.0707526,  1.0544517,
        -0.40317693, 1.222445,    0.20827498,  0.97663903,  0.3563664,
        0.7065732,   0.01050002,  1.7858706,   0.12691209,  0.40198937,
        1.8831507,   -1.347759,   -1.270485,   0.9693967,   -1.1731234,
        1.9436212,   -0.41361898, -0.7474548,  1.922942,    1.4805148,
        1.867559,    0.90604466,  -0.86122566, 1.9100649,   -0.26800337,
        0.8024564,   0.947252,    -0.15501009, 0.61407936,  0.9222067,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        2.436513,   0.7597104,   1.7918843,   3.9671757,  1.6901319,
        -0.5754969, 2.5802867,   -0.61413944, 0.80407953, 0.35865313,
        -0.585047,  1.3252906,   -0.378363,   1.3565009,  0.04152161,
        1.0184845,  2.3648763,   0.3736914,   0.6246202,  -0.9102611,
        -1.3878399, -0.24720794, 0.39877376,  0.79407865, 0.7815025,
        -3.350255,  -1.1330211,  -0.00725903, 2.6035318,  0.4149071,
        0.55812436, -0.8442825,  -1.0960608,  -2.9574356, -0.7042786,
        -0.5502242, 1.2197906,   -0.5834907,  -0.5142389, -0.7042921,
        -2.9317036, -0.07225895, -0.43578517, 0.9813787,  0.66347116,
        -2.3816955, -0.83917636, 1.5249453,   -3.53684,   -1.6932551,
        -2.7630255, -0.51914215, 0.35042053,  -3.0906973, 0.23982115,
        -0.3741245, -0.88073474, 0.45748198,  -1.2484014, -1.2849479,
      ],
    };
    testBinary(inputA, inputB, expected, sub);
  });

  it('sub broadcast', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.37642553,  -1.0994008,  0.2982382,   1.3263859,   -0.69456786,
        -0.14963454, -0.43515354, 1.8492638,   0.67229474,  0.40746182,
        -0.76991606, 0.5392492,   -0.6743327,  0.03183056,  -0.6358461,
        0.67643327,  0.57659084,  -0.20829876, 0.3960067,   -1.0930616,
        -1.4912575,  0.4393917,   0.1666735,   0.63503146,  2.3831449,
        0.94447947,  -0.91282225, 1.1170163,   -1.3159074,  -0.4615846,
        -0.0682416,  1.7133427,   -0.74475485, -0.82643855, -0.09845252,
        -0.6634783,  1.1266359,   -1.0799315,  -1.1474687,  -0.43782005,
        -0.49803245, 1.929532,    0.9494208,   0.08755124,  -1.2254355,
        0.844363,    -1.0002153,  -1.5447711,  1.1880298,   0.3169426,
        0.9208588,   0.31872764,  0.8568306,   -0.6510256,  -1.0342429,
        0.6815945,   -0.80340964, -0.6895498,  -0.4555325,  0.01747916,
      ],
    };
    const inputB = {
      shape: [5],
      data: [
        -0.35399392,
        -1.3749512,
        -0.6436184,
        -2.2234032,
        0.62523144,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        0.73041946,  0.27555048, 0.9418566,   3.549789,   -1.3197993,
        0.20435938,  0.9397977,  2.4928823,   2.895698,   -0.21776962,
        -0.41592214, 1.9142004,  -0.03071427, 2.2552338,  -1.2610775,
        1.0304272,   1.9515421,  0.43531966,  2.61941,    -1.718293,
        -1.1372637,  1.814343,   0.8102919,   2.8584347,  1.7579134,
        1.2984734,   0.462129,   1.7606347,   0.90749586, -1.0868161,
        0.28575233,  3.088294,   -0.10113645, 1.3969647,  -0.72368395,
        -0.3094844,  2.5015872,  -0.4363131,  1.0759345,  -1.0630515,
        -0.14403853, 3.3044834,  1.5930393,   2.3109546,  -1.850667,
        1.1983569,   0.37473595, -0.9011527,  3.411433,   -0.30828884,
        1.2748528,   1.6936789,  1.500449,    1.5723777,  -1.6594744,
        1.0355884,   0.5715416,  -0.0459314,  1.7678707,  -0.60775226,
      ],
    };
    testBinary(inputA, inputB, expected, sub);
  });

  it('mul', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        5.6232101e-01,  1.3117781e-01,  -1.4161869e+00, 2.0386910e-02,
        9.1077393e-01,  7.4952751e-01,  -2.8509337e-01, -1.6272701e+00,
        1.0271618e+00,  4.2815253e-01,  -7.7895027e-01, 9.7542489e-01,
        3.9352554e-01,  9.7878903e-01,  -6.0965502e-01, 6.6299748e-01,
        -1.1980454e+00, -7.7857232e-01, -9.8175555e-01, -2.8763762e-01,
        -3.2260692e-01, -7.4259090e-01, -1.0055183e+00, -1.4305019e+00,
        6.0624069e-01,  -1.5911928e-01, 4.5598033e-01,  1.0880016e-01,
        1.4949993e+00,  6.6210419e-01,  -5.6889033e-01, -2.0945708e-01,
        -7.1049523e-01, -2.8507587e-01, 1.1723405e+00,  -6.3937567e-02,
        -5.4250038e-01, -1.2398884e+00, -1.0347517e+00, 1.2763804e+00,
        -1.5979607e+00, -5.8152825e-01, -5.0100851e-01, -1.0742084e+00,
        -1.1273566e+00, 3.4815140e-04,  -5.6024802e-01, 1.0848801e+00,
        -5.1780093e-01, -3.8996863e-01, 5.3133094e-01,  2.3897937e-01,
        -1.3832775e+00, 6.3414145e-01,  1.0691971e+00,  5.7040757e-01,
        3.0711100e-01,  8.8405716e-01,  -2.1583509e+00, 4.3243581e-01,
      ],
    };
    const inputB = {
      shape: [3, 4, 5],
      data: [
        2.0435283,  0.07213961,  -1.1644137,  -1.2209045,  0.8982674,
        0.21796915, 0.27658972,  0.7744382,   -0.52159035, -0.969913,
        0.6081186,  -0.04225572, 0.3275312,   -0.06443629, -2.257355,
        1.7802691,  -1.279233,   -3.1389477,  -1.1663845,  -0.79485595,
        0.679013,   1.0919031,   0.51905185,  1.3186365,   0.6612518,
        0.40741763, 0.05208012,  0.16548257,  -0.4570541,  0.10149371,
        0.08249464, 0.3992067,   -0.3945879,  -0.37389037, 1.4760005,
        -0.781274,  -0.49022308, 0.27020553,  -0.2356837,  0.13846985,
        0.9767852,  -1.3560135,  0.78826934,  -0.18788454, 0.38178417,
        0.9748209,  1.0242884,   0.7939937,   0.24449475,  -1.3840157,
        1.9665064,  0.35833818,  -0.87076694, -0.76727265, 0.6157508,
        -0.5558823, 0.18417479,  -0.93904793, -0.00859687, 0.5034271,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        1.1491189e+00,  9.4631165e-03,  1.6490275e+00,  -2.4890469e-02,
        8.1811851e-01,  1.6337387e-01,  -7.8853898e-02, -1.2602202e+00,
        -5.3575772e-01, -4.1527072e-01, -4.7369415e-01, -4.1217282e-02,
        1.2889189e-01,  -6.3069537e-02, 1.3762078e+00,  1.1803139e+00,
        1.5325792e+00,  2.4438977e+00,  1.1451044e+00,  2.2863047e-01,
        -2.1905430e-01, -8.1083733e-01, -5.2191615e-01, -1.8863121e+00,
        4.0087774e-01,  -6.4828001e-02, 2.3747511e-02,  1.8004529e-02,
        -6.8329555e-01, 6.7199409e-02,  -4.6930403e-02, -8.3616674e-02,
        2.8035283e-01,  1.0658713e-01,  1.7303753e+00,  4.9952760e-02,
        2.6594621e-01,  -3.3502471e-01, 2.4387409e-01,  1.7674020e-01,
        -1.5608643e+00, 7.8856015e-01,  -3.9492965e-01, 2.0182715e-01,
        -4.3040693e-01, 3.3938527e-04,  -5.7385558e-01, 8.6138797e-01,
        -1.2659961e-01, 5.3972268e-01,  1.0448657e+00,  8.5635431e-02,
        1.2045124e+00,  -4.8655939e-01, 6.5835893e-01,  -3.1707945e-01,
        5.6562103e-02,  -8.3017206e-01, 1.8555066e-02,  2.1769990e-01,
      ],
    };
    testBinary(inputA, inputB, expected, mul);
  });

  it('mul broadcast', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        -0.08539673, 0.11800674,  -1.2358714,  0.30089188,  -0.73443925,
        1.4894297,   0.16823359,  -2.2034893,  1.0740992,   -0.35457978,
        0.61524934,  0.462153,    0.5992003,   -0.81047946, -2.2757835,
        -0.21841764, 1.1650828,   -0.56927145, 1.9960726,   0.62048405,
        0.10586528,  -1.0386543,  -1.9402571,  -2.0906122,  -0.4305259,
        -1.2730165,  1.5639576,   0.53357494,  -0.8079486,  -0.06450062,
        -0.7841324,  -0.24135855, 1.9275267,   0.4476717,   0.15467685,
        -1.2363592,  -0.50745815, 0.03250425,  0.86344534,  -0.7938714,
        1.1835734,   1.515135,    0.3092435,   -1.311751,   -0.6659017,
        0.8815683,   -0.31157655, 0.57511795,  -1.1924151,  -1.8408557,
        -0.85080767, -1.3341717,  0.54687303,  -0.14426671, -0.15728855,
        0.323939,    1.167636,    0.03020451,  0.91373825,  1.0675793,
      ],
    };
    const inputB = {
      shape: [5],
      data: [
        0.6338172,
        1.630534,
        -1.3819867,
        -1.0427561,
        1.058136,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        -0.05412592, 0.192414,    1.707958,    -0.31375682, -0.7771366,
        0.9440262,   0.2743106,   3.045193,    -1.1200235,  -0.37519363,
        0.3899556,   0.7535562,   -0.82808685, 0.8451324,   -2.4080884,
        -0.13843685, 1.8997072,   0.7867256,   -2.0814168,  0.6565565,
        0.06709924,  -1.6935612,  2.6814096,   2.1799986,   -0.45555493,
        -0.80685973, 2.550086,    -0.7373935,  0.8424933,   -0.06825043,
        -0.4969966,  -0.39354333, -2.6638165,  -0.4668124,  0.16366914,
        -0.7836257,  -0.8274278,  -0.04492044, -0.9003629,  -0.8400239,
        0.75016916,  2.4704792,   -0.42737043, 1.3678364,   -0.7046146,
        0.55875313,  -0.5080362,  -0.79480535, 1.2433981,   -1.9478757,
        -0.5392565,  -2.1754124,  -0.7557713,  0.15043499,  -0.16643268,
        0.20531811,  1.9038703,   -0.04174223, -0.9528061,  1.129644,
      ],
    };
    testBinary(inputA, inputB, expected, mul);
  });

  it('div', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.5270042,   0.4537819,   -1.8297404,  0.03700572,  0.76790243,
        0.5898798,   -0.36385882, -0.8056265,  -1.1183119,  -0.13105401,
        1.1330799,   -1.9518042,  -0.6598917,  -1.1398025,  0.7849575,
        -0.5543096,  -0.47063765, -0.21694957, 0.44539326,  -0.392389,
        -3.046143,   0.5433119,   0.43904296,  -0.21954103, -1.0840366,
        0.35178012,  0.37923554,  -0.47003287, -0.21673147, -0.9301565,
        -0.17858909, -1.5504293,  0.41731882,  -0.9443685,  0.23810315,
        -1.405963,   -0.5900577,  -0.11048941, -1.6606998,  0.11514787,
        -0.37914756, -1.7423562,  -1.3032428,  0.60512006,  0.895556,
        -0.13190864, 0.40476182,  0.22384356,  0.32962298,  1.285984,
        -1.5069984,  0.67646074,  -0.38200897, -0.22425893, -0.30224973,
        -0.3751471,  -1.2261962,  0.1833392,   1.670943,    -0.05613302,
      ],
    };
    const inputB = {
      shape: [3, 4, 5],
      data: [
        0.99861497,  0.312701,   0.88252544,  1.4661665,   0.6297575,
        0.546196,    1.4032645,  0.08199525,  1.2524966,   1.8203218,
        2.3599486,   0.909618,   2.367597,    2.03441,     0.00378734,
        -0.21793854, 0.69503635, 2.0289354,   0.927713,    0.39934242,
        2.5522432,   1.2869045,  -1.3205943,  1.3171606,   1.5200406,
        1.2256087,   1.449712,   0.9327244,   -0.31839585, 0.629296,
        0.05438423,  0.06725907, -0.26306832, 1.4524891,   1.0978961,
        0.55183464,  0.35066205, 0.9765769,   2.0791948,   -1.0042157,
        1.3768766,   0.454288,   -0.88458586, -0.945703,   0.0872165,
        1.2195096,   1.393063,   0.06101841,  2.017021,    2.4229836,
        1.3960866,   0.40859735, 2.1244192,   1.7553957,   1.8674074,
        0.34353632,  -1.8345544, 3.116791,    -0.61087835, 0.9642319,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        5.2773511e-01,  1.4511688e+00,  -2.0733004e+00, 2.5239782e-02,
        1.2193620e+00,  1.0799783e+00,  -2.5929454e-01, -9.8252831e+00,
        -8.9286619e-01, -7.1994968e-02, 4.8012903e-01,  -2.1457405e+00,
        -2.7871791e-01, -5.6026191e-01, 2.0725833e+02,  2.5434217e+00,
        -6.7714107e-01, -1.0692778e-01, 4.8009813e-01,  -9.8258781e-01,
        -1.1935160e+00, 4.2218509e-01,  -3.3245862e-01, -1.6667749e-01,
        -7.1316290e-01, 2.8702483e-01,  2.6159370e-01,  -5.0393540e-01,
        6.8069816e-01,  -1.4780906e+00, -3.2838395e+00, -2.3051601e+01,
        -1.5863515e+00, -6.5017247e-01, 2.1687222e-01,  -2.5477974e+00,
        -1.6826961e+00, -1.1313948e-01, -7.9872257e-01, -1.1466448e-01,
        -2.7536786e-01, -3.8353560e+00, 1.4732802e+00,  -6.3986266e-01,
        1.0268195e+01,  -1.0816532e-01, 2.9055530e-01,  3.6684597e+00,
        1.6342071e-01,  5.3074402e-01,  -1.0794448e+00, 1.6555681e+00,
        -1.7981808e-01, -1.2775406e-01, -1.6185527e-01, -1.0920159e+00,
        6.6838908e-01,  5.8823064e-02,  -2.7353122e+00, -5.8215268e-02,
      ],
    };
    testBinary(inputA, inputB, expected, div);
  });

  it('div broadcast', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        2.3807454,   0.33057675,  0.94924647,  -1.5023966,  -1.7776669,
        -0.5327028,  1.0907497,   -0.34624946, -0.7946363,  0.19796729,
        1.0819352,   -1.4449402,  -1.210543,   -0.7886692,  1.0946383,
        0.23482153,  2.1321535,   0.9364457,   -0.03509518, 1.2650778,
        0.21149701,  -0.70492136, 0.67997485,  -0.6963267,  -0.2903971,
        1.3277828,   -0.10128149, -0.8031414,  -0.46433768, 1.0217906,
        -0.55254066, -0.38687086, -0.51029277, 0.1839255,   -0.38548976,
        -1.6018361,  -0.8871809,  -0.932789,   1.2433194,   0.81267405,
        0.58725935,  -0.50535834, -0.81579155, -0.5075176,  -1.0518801,
        2.4972005,   -2.2453218,  0.56400853,  -1.2845523,  -0.10434349,
        -0.98800194, -1.177629,   -1.1401963,  1.7549862,   -0.13298842,
        -0.7657022,  0.55578697,  0.01034931,  0.72003376,  -1.8242567,
      ],
    };
    const inputB = {
      shape: [5],
      data: [
        1.3041736,
        1.5910654,
        1.9217191,
        1.8052639,
        1.7239413,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        1.825482,    0.20777069,  0.49395692,  -0.832231,   -1.0311644,
        -0.40846005, 0.68554676,  -0.18017694, -0.44017738, 0.11483412,
        0.82959443,  -0.9081589,  -0.62992716, -0.436872,   0.6349626,
        0.18005389,  1.3400791,   0.48729584,  -0.01944047, 0.73382884,
        0.16216937,  -0.4430499,  0.35383677,  -0.38572016, -0.16844954,
        1.0181028,   -0.0636564,  -0.41792864, -0.25721318, 0.59270614,
        -0.4236711,  -0.24315208, -0.26553974, 0.10188289,  -0.22360957,
        -1.2282383,  -0.5576018,  -0.48539302, 0.6887189,   0.4714047,
        0.45029232,  -0.3176226,  -0.42451134, -0.28113207, -0.61016005,
        1.9147762,   -1.4112065,  0.29349166,  -0.7115593,  -0.06052613,
        -0.7575694,  -0.7401512,  -0.593321,   0.9721494,   -0.07714208,
        -0.5871168,  0.3493175,   0.00538545,  0.39885238,  -1.0581895,
      ],
    };
    testBinary(inputA, inputB, expected, div);
  });

  it('max', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.54270846, 0.3356357,  0.04034169,  1.6710619,   -1.0029255,
        1.4024457,  -0.5183214, -1.5897884,  0.16786452,  -0.92690915,
        -0.8761584, 1.8612522,  0.2960607,   0.11604685,  0.2686291,
        -0.5718065, 0.4856556,  -1.2307562,  -1.7977105,  -1.1370704,
        1.0383102,  -1.0015849, -1.367141,   0.32427165,  1.2968429,
        1.3039074,  -0.6295407, 1.1250858,   1.0206878,   -0.769062,
        0.96548617, 1.9100864,  2.1261373,   0.8835118,   -0.66880584,
        0.9088927,  1.8120629,  -0.25648043, 0.15793198,  -1.5175776,
        0.08734574, 0.9441932,  -1.0558261,  0.1276651,   -2.9616504,
        2.1102998,  0.58067006, -0.7349921,  -0.28586444, -0.92654175,
        -0.507083,  -1.8776977, 0.57921827,  1.460351,    1.4930215,
        -0.757663,  1.0773797,  -1.1858964,  -0.5337765,  0.27636543,
      ],
    };
    const inputB = {
      shape: [3, 4, 5],
      data: [
        -0.00724315, -1.4088361,  0.17466596,  1.1395162,   1.3720452,
        -0.35610083, -0.5597993,  -0.26632488, -0.31922337, -0.2980101,
        0.12268824,  -1.1521344,  -1.0502838,  0.85281086,  -0.83374727,
        0.00551354,  0.08081324,  -0.13748081, 0.59067047,  -0.20894054,
        -0.9008378,  -0.06121079, -1.8927814,  -0.5113896,  2.0618987,
        -0.09704968, 1.9003097,   -0.27883208, -0.9971944,  -1.0472671,
        0.995112,    0.83037376,  1.5058613,   0.51366556,  0.4476341,
        1.0389726,   -0.04508441, -0.2180115,  0.3973936,   0.58917326,
        2.3834932,   0.71679467,  0.06214673,  -0.09415992, 0.9173279,
        0.55409455,  0.6537859,   -1.1739589,  1.1591603,   0.5907742,
        -1.0454807,  -0.8065648,  2.0162134,   -0.30215183, 0.67375183,
        1.6682644,   -2.916385,   0.43166366,  -0.7290503,  0.11509943,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        0.54270846, 0.3356357,   0.17466596, 1.6710619,   1.3720452,  1.4024457,
        -0.5183214, -0.26632488, 0.16786452, -0.2980101,  0.12268824, 1.8612522,
        0.2960607,  0.85281086,  0.2686291,  0.00551354,  0.4856556,  -0.13748081,
        0.59067047, -0.20894054, 1.0383102,  -0.06121079, -1.367141,  0.32427165,
        2.0618987,  1.3039074,   1.9003097,  1.1250858,   1.0206878,  -0.769062,
        0.995112,   1.9100864,   2.1261373,  0.8835118,   0.4476341,  1.0389726,
        1.8120629,  -0.2180115,  0.3973936,  0.58917326,  2.3834932,  0.9441932,
        0.06214673, 0.1276651,   0.9173279,  2.1102998,   0.6537859,  -0.7349921,
        1.1591603,  0.5907742,   -0.507083,  -0.8065648,  2.0162134,  1.460351,
        1.4930215,  1.6682644,   1.0773797,  0.43166366,  -0.5337765, 0.27636543,
      ],
    };
    testBinary(inputA, inputB, expected, max);
  });

  it('max broadcast', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        -0.78042406, -0.18523395, -0.12612817, -0.24858657, 0.36215156,
        -0.41349608, 1.540389,    1.9143543,   0.4806893,   0.0123093,
        1.2142435,   -0.57421523, -2.1229508,  1.1247561,   0.11206079,
        0.5191412,   -0.2109448,  -0.97485703, 0.6992101,   1.0161952,
        -0.19765139, 0.34198883,  -0.24741505, 1.5920583,   0.56292,
        0.09105966,  0.82438636,  -0.2996084,  -0.97498095, 1.9305013,
        1.4938543,   0.01099077,  0.7837045,   0.6621192,   0.9520401,
        -0.63094735, -1.4202772,  2.6008792,   -0.3047365,  -0.58313465,
        -0.37956452, -0.14322324, -1.2261407,  -1.1514657,  -0.28318587,
        -0.06985976, 0.48337674,  0.99673945,  -0.54980195, -1.7497128,
        0.62820524,  1.0456259,   0.16508068,  0.5966878,   0.7607826,
        0.9664813,   -0.13389224, -0.5757679,  0.38655168,  -0.39935285,
      ],
    };
    const inputB = {
      shape: [5],
      data: [
        0.67538136,
        0.3535401,
        1.0303422,
        -0.50294054,
        -0.25600532,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        0.67538136, 0.3535401,  1.0303422, -0.24858657, 0.36215156,
        0.67538136, 1.540389,   1.9143543, 0.4806893,   0.0123093,
        1.2142435,  0.3535401,  1.0303422, 1.1247561,   0.11206079,
        0.67538136, 0.3535401,  1.0303422, 0.6992101,   1.0161952,
        0.67538136, 0.3535401,  1.0303422, 1.5920583,   0.56292,
        0.67538136, 0.82438636, 1.0303422, -0.50294054, 1.9305013,
        1.4938543,  0.3535401,  1.0303422, 0.6621192,   0.9520401,
        0.67538136, 0.3535401,  2.6008792, -0.3047365,  -0.25600532,
        0.67538136, 0.3535401,  1.0303422, -0.50294054, -0.25600532,
        0.67538136, 0.48337674, 1.0303422, -0.50294054, -0.25600532,
        0.67538136, 1.0456259,  1.0303422, 0.5966878,   0.7607826,
        0.9664813,  0.3535401,  1.0303422, 0.38655168,  -0.25600532,
      ],
    };
    testBinary(inputA, inputB, expected, max);
  });

  it('min', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.30360392,  0.79021126,  0.11072686,  1.0779074,   -0.02202512,
        -0.4660466,  0.5439212,   -1.1046865,  -0.7237214,  1.7275667,
        0.05005725,  0.03450501,  -0.93030375, 0.8889801,   1.6954619,
        -0.01362751, -0.276192,   0.05534686,  1.046008,    0.10164198,
        0.5601633,   -0.32077986, -0.59266484, -0.39202943, -0.03543149,
        -0.311161,   -2.6089416,  0.5112193,   -1.4783202,  -0.8066068,
        0.77324635,  1.5120724,   1.3049824,   -0.03303701, 1.201271,
        -0.08360443, -1.0856549,  -1.268517,   -0.77472717, -0.6026987,
        -0.37952536, -1.1476341,  0.08269309,  1.0225683,   -1.4790517,
        1.9010514,   -0.8733177,  -0.08186013, 1.1718949,   -0.01093488,
        -0.3274254,  0.73195547,  -0.5514492,  -0.7521337,  -1.0613606,
        0.6751333,   0.9138903,   1.7775172,   0.5034791,   0.00691956,
      ],
    };
    const inputB = {
      shape: [3, 4, 5],
      data: [
        -0.3013072,  -0.09710764, 0.19347863,  0.57673335,  -0.9459303,
        -0.311303,   -0.51731133, 0.05566696,  0.1896354,   -2.4551184,
        0.49731326,  -0.505013,   0.38610065,  -0.46502006, 0.11969721,
        0.52275103,  0.25405633,  -2.177016,   0.36703554,  0.33286744,
        -0.49586803, 0.09411436,  0.38203833,  -1.8008012,  0.4627897,
        -0.14300857, 0.26225486,  0.10055642,  1.5006567,   -0.04743041,
        -0.7460712,  -1.3833494,  -0.2873905,  -1.8731467,  -1.006253,
        -0.21216351, -1.2171068,  0.1594863,   -1.7146875,  0.21852039,
        1.3147641,   0.28219756,  -0.84008366, -0.979971,   0.2722022,
        1.1494406,   -1.4083267,  0.09631079,  -0.04712944, -0.8959271,
        1.2020742,   -0.24440259, 0.18198308,  -1.3384086,  -0.5169678,
        -0.6608337,  0.30539933,  -1.529869,   -0.70533603, -2.1911235,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        -0.3013072,  -0.09710764, 0.11072686,  0.57673335,  -0.9459303,
        -0.4660466,  -0.51731133, -1.1046865,  -0.7237214,  -2.4551184,
        0.05005725,  -0.505013,   -0.93030375, -0.46502006, 0.11969721,
        -0.01362751, -0.276192,   -2.177016,   0.36703554,  0.10164198,
        -0.49586803, -0.32077986, -0.59266484, -1.8008012,  -0.03543149,
        -0.311161,   -2.6089416,  0.10055642,  -1.4783202,  -0.8066068,
        -0.7460712,  -1.3833494,  -0.2873905,  -1.8731467,  -1.006253,
        -0.21216351, -1.2171068,  -1.268517,   -1.7146875,  -0.6026987,
        -0.37952536, -1.1476341,  -0.84008366, -0.979971,   -1.4790517,
        1.1494406,   -1.4083267,  -0.08186013, -0.04712944, -0.8959271,
        -0.3274254,  -0.24440259, -0.5514492,  -1.3384086,  -1.0613606,
        -0.6608337,  0.30539933,  -1.529869,   -0.70533603, -2.1911235,
      ],
    };
    testBinary(inputA, inputB, expected, min);
  });

  it('min broadcast', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.09259097,  -1.2761278,  0.63461846,  0.83395857,  -0.6424096,
        -0.10002025, 0.2483844,   1.324728,    0.7070375,   -0.24927127,
        -1.1588863,  0.05159701,  -0.27449006, 1.3718864,   -0.2961051,
        -0.21801688, 0.4596571,   -0.2982913,  -2.4248464,  0.25273538,
        0.04604488,  -0.87013924, 1.554572,    0.41449285,  -0.68581927,
        0.21872331,  0.5650471,   -1.3366132,  -0.34167227, 1.4196033,
        -0.9094157,  0.5909053,   0.20646141,  0.23326884,  0.27068487,
        -0.2444074,  0.44961262,  -1.3790505,  -1.4981223,  1.9089019,
        0.6859794,   -1.6197531,  -0.85252583, 0.3867299,   0.9107394,
        0.63347656,  -2.0192556,  0.49276412,  0.5069547,   0.14318226,
        -0.5055633,  -1.2882828,  0.00957129,  0.41766334,  -0.53743577,
        0.3123349,   0.04377401,  -0.26201916, -1.6016098,  -0.74272215,
      ],
    };
    const inputB = {
      shape: [5],
      data: [
        0.6450575,
        -1.302236,
        0.27485028,
        1.8353013,
        -0.83993983,
      ],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        0.09259097,  -1.302236,  0.27485028,  0.83395857,  -0.83993983,
        -0.10002025, -1.302236,  0.27485028,  0.7070375,   -0.83993983,
        -1.1588863,  -1.302236,  -0.27449006, 1.3718864,   -0.83993983,
        -0.21801688, -1.302236,  -0.2982913,  -2.4248464,  -0.83993983,
        0.04604488,  -1.302236,  0.27485028,  0.41449285,  -0.83993983,
        0.21872331,  -1.302236,  -1.3366132,  -0.34167227, -0.83993983,
        -0.9094157,  -1.302236,  0.20646141,  0.23326884,  -0.83993983,
        -0.2444074,  -1.302236,  -1.3790505,  -1.4981223,  -0.83993983,
        0.6450575,   -1.6197531, -0.85252583, 0.3867299,   -0.83993983,
        0.63347656,  -2.0192556, 0.27485028,  0.5069547,   -0.83993983,
        -0.5055633,  -1.302236,  0.00957129,  0.41766334,  -0.83993983,
        0.3123349,   -1.302236,  -0.26201916, -1.6016098,  -0.83993983,
      ],
    };
    testBinary(inputA, inputB, expected, min);
  });

  it('sqrt 1dx1d', function() {
    const inputA = {
      shape: [3],
      data: [1, 4, 9],
    };
    const inputB = {
      shape: [1],
      data: [0.5],
    };
    const expected = {
      shape: [3],
      data: [1, 2, 3],
    };
    testBinary(inputA, inputB, expected, pow);
  });

  it('pow 3dx1d', function() {
    const inputA = {
      shape: [3, 4, 5],
      data: [
        0.33435354, 0.57139647, 0.03689031, 0.7820907,  0.7718887,
        0.17709309, 1.05624,    2.2693596,  1.0328789,  1.6043026,
        2.0692635,  1.7839943,  1.4888871,  0.57544494, 0.2760935,
        0.25916228, 0.24607088, 0.75507194, 0.9365655,  0.66641825,
        0.1919839,  0.42336762, 1.1776822,  1.8486708,  0.7361624,
        0.28052628, 0.261271,   1.0593715,  0.54762685, 0.61064255,
        0.6917134,  0.3692974,  0.01287235, 0.6559981,  0.32968605,
        1.9361054,  1.5982035,  0.49353063, 0.28142217, 0.55740887,
        0.43017766, 2.6145968,  0.4801058,  0.7487864,  1.0473998,
        0.11505236, 0.24899477, 0.21978393, 0.21973193, 0.6550839,
        0.7919175,  0.21990986, 0.2881369,  0.5660939,  0.54675615,
        0.70638055, 0.82219034, 0.6266006,  0.89149487, 0.36557788,
      ],
    };
    const inputB = {
      shape: [1],
      data: [0.5],
    };
    const expected = {
      shape: [3, 4, 5],
      data: [
        0.5782331,  0.7559077,  0.1920685,  0.88435894, 0.8785719,
        0.4208243,  1.0277354,  1.5064393,  1.0163065,  1.2666107,
        1.4384935,  1.3356625,  1.2201996,  0.75858086, 0.525446,
        0.5090798,  0.4960553,  0.86894876, 0.9677631,  0.81634444,
        0.43815967, 0.6506671,  1.0852107,  1.3596584,  0.8579991,
        0.5296473,  0.5111467,  1.0292578,  0.7400181,  0.7814362,
        0.8316931,  0.60769844, 0.11345637, 0.8099371,  0.5741829,
        1.39144,    1.2642008,  0.70251733, 0.53049237, 0.7465982,
        0.6558793,  1.6169715,  0.69289666, 0.86532444, 1.0234255,
        0.3391937,  0.49899375, 0.46881118, 0.46875572, 0.80937254,
        0.88989747, 0.46894547, 0.5367839,  0.7523921,  0.7394296,
        0.8404645,  0.9067471,  0.7915811,  0.9441901,  0.60463035,
      ],
    };
    testBinary(inputA, inputB, expected, pow);
  });

  it('pow 1dx1d', function() {
    const inputA = {
      shape: [3],
      data: [1, 2, 3],
    };
    const inputB = {
      shape: [3],
      data: [4, 5, 6],
    };
    const expected = {
      shape: [3],
      data: [1., 32., 729.],
    };
    testBinary(inputA, inputB, expected, pow);
  });

  it('pow 1dx1d', function() {
    const inputA = {
      shape: [3],
      data: [1, 2, 3],
    };
    const inputB = {
      shape: [3],
      data: [4, 5, 6],
    };
    const expected = {
      shape: [3],
      data: [1., 32., 729.],
    };
    testBinary(inputA, inputB, expected, pow);
  });

  it('pow 1dx1d broadcast', function() {
    const inputA = {
      shape: [3],
      data: [1, 2, 3],
    };
    const inputB = {
      shape: [1],
      data: [2],
    };
    const expected = {
      shape: [3],
      data: [1., 4., 9.],
    };
    testBinary(inputA, inputB, expected, pow);
  });

  it('pow 2dx1d broadcast', function() {
    const inputA = {
      shape: [2, 3],
      data: [1, 2, 3, 4, 5, 6],
    };
    const inputB = {
      shape: [3],
      data: [1, 2, 3],
    };
    const expected = {
      shape: [2, 3],
      data: [1., 4., 27., 4., 25., 216.],
    };
    testBinary(inputA, inputB, expected, pow);
  });
});
